import options from "src/options.js";
import { which, fileExists } from "./tools.js";
import { STYLE_PATH } from "src/lib/variables.js";

export const compileScss = () => {
  Utils.exec(
    ["sass", `${STYLE_PATH}/main.scss`, `${STYLE_PATH}/style.css`],
    () => {},
    console.error,
  );
};

export const generateColors = () => {
  // Const vars
  const OUT = `${STYLE_PATH}/matugen/colors.scss`;
  const parse = (obj) => {
    for (let key in obj) {
      scss.push(`$${key}: ${out.colors.dark[key]};`);
    }
  };

  // Checking basic possible errors
  if (options.wallpaper.value == "") {
    Utils.exec(["cp", `${OUT}.fall`, OUT]);
    return;
  }

  if (!fileExists(options.wallpaper.value)) {
    console.error("Wallpaper doesn't exists.");
    return;
  }

  if (!which("matugen")) {
    console.error("Matugen not installed.");
  }

  // Actual code
  let out = JSON.parse(
    Utils.exec(["matugen", "image", options.wallpaper.value, "--json", "hex"]),
  );

  let scss = [
    "// Generated by ags (xtremethn dotfiles), don't edit manually.\n",
  ];
  if (options.dark_mode.value) {
    parse(out.colors.dark);
  } else {
    parse(out.colors.white);
  }

  Utils.writeFileSync(scss.join("\n"), `${STYLE_PATH}/matugen/colors.scss`);
};

export const initStyle = () => {
  generateColors();
  compileScss();
  App.applyCss(`${STYLE_PATH}/style.css`, true);
};
